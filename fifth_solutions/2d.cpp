#include <iostream>

using namespace std;

int main() {
  const int sz = 7;
  long  ARR[sz]{5, 12, -5, 67, 111, 10, 24};

  _asm
  {; начало ассемблерной вставки
    lea EBX, ARR    ; адрес массива в EBX
    mov EAX, [EBX]    ; первый элемент массива в EAX для последующего сравнения с другими
    mov ecx, sz      ; количество итераций цикла

    m1:          ; метка цикла перебора
    cmp EAX, [EBX]    ; сравнение текущего максимального и текущего в массиве
    jl m2        ; если текущий элемент больше текущего максимального
    add EBX, 4      ; адрес на следующий элемент массива
    loop m1        ; новая итерация цикла перебора

    jmp exit1      ; переход на метку выхода 

    m2:          ; метка в случае если нужно заменить максимальный элемент
    mov EAX, [EBX]    ; обновление текущего максимального новым
    mov ESI, EBX    ; сохранение адреса текущего максимального в ESI
    jmp m1        ; переход на цикл перебора

    exit1:        ; метка выхода
    mov EBX, ESI
    mov ESI, EAX

  }
  return 0;
}
